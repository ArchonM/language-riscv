'scopeName': 'source.riscv'
'fileTypes': [
  's'
]
'name': 'RISC-V Assembler'
'patterns': [
  {
    'match': '[;#].*$'
    'name': 'comment.line'
  }
  {
    'match': '^\\s*\\.(text|data|bss|section)\\b'
    'name': 'string.section'
  }
  {
    'match': '(?i)^(\\d+:)?[\t ]*\\b((mv|add|sll|slt|xor|srl|sra|or|and)i?|adc|(add|sll|srl|sra)i?w|sub|subw|slt(i)?u|(mul|div(u)?)(w)?|rem(u)?(w)?|mulh(s)?(u)?|muls|j|jal(r)?|(b[lg][te](u)?|beq|bne)z?|fence(\.i)?|lui|auipc|l[aibhw](u?)|ld|s[bhwd]|push|pop|nop|[se](call|break)|[ushmd]?ret|sfence\.vm|wfi|csr[rws]([wsc]i?)?|fssr|f(add|sub|mul|div|sgnj[nx]?|min|max|sqrt)\.[sd]|fcvt\.(s\.d|d\.s)|fcvt\.(w|wu|l|lu)\.[sd]|fcvt\.[sd]\.(w|wu|l|lu)|fmv\.x\.[sd]|fmv\.[sd]\.x|fclass\.[sd]|f(l[te]|eq)\.[sd]|f[ls][wd]|f(n)?m(add|sub)\.[sd]|amo(add|xor|or|and|min[u]?|max[u]?|swap)\.[wd]|(lr|sc)\.[wd])\\b'
    'name': 'keyword.mnemonic'
  }
  {
    'match': '(?i)\\b([xf][0-9]|[xf][012][0-9]|[xf]3[012]|ra|[sgtf]p|t[0-6]|f?s[0-9]|f?s1[01]|f?a[0-7]|ft[0-7])\\b'
    'name': 'storage.register'
  }
  {
    'match': '^\\s*([^_][^\\r\\n\\t\\f :]*:)[\\t ]*(?=\\.)'
    'name': 'entity.name.constant'
  }
  {
    'match': '^\\s*([^_][^\\r\\n\\t\\f :]*:)[\\t ]*(?=$|;|#)'
    'name': 'entity.name.function'
  }
  {
    'match': '^\\s*([^\\r\\n\\t\\f :]*:)[\\t ]*(?=$|;|#)'
    'name': 'entity.name.type'
  }
  {
    'match': '\\b(zero)\\b'
    'name': 'constant.numeric.variable'
  }
  {
    'begin': '\\.glob(a)?l[\t ]+'
    'beginCaptures':
      '0':
        'name': 'keyword.control'
    'end': '$'
    'name': 'entity.name.constant'
  }
  {
    'match': '\\.(align|space|fill|asciiz|byte|half|[d]?word)\\b'
    'name': 'storage'
  }
  {
    'match': '@progbits\\b'
    'name': 'constant.numeric.literal'
  }
  {
    'match': '\\$(0[bx])?[0-9a-fA-F]+\\b'
    'name': 'constant.numeric.literal'
  }
  {
    'match': '\\b[0-9]+\\b'
    'name': 'constant.numeric.dec'
  }
  {
    'match': '\\b($[0-9a-fA-F]+h?|(0x)?[0-9a-fA-F]+)\\b'
    'name': 'constant.numeric.hex'
  }
  {
    'begin': '"|\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.asm'
    'end': '"|\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.asm'
    'name': 'string.quoted.asm'
    'patterns': [
      {
        'include': '#string_escaped_char'
      }
      {
        'include': '#string_placeholder'
      }
    ]
  }
]
